// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package playerDI

import (
	"github.com/google/wire"
	"gitnub.com/hifat/hero-sekai-shop-microservice/config"
	"gitnub.com/hifat/hero-sekai-shop-microservice/moduels/playerModule/playerHandler"
	"gitnub.com/hifat/hero-sekai-shop-microservice/moduels/playerModule/playerRepository"
	"gitnub.com/hifat/hero-sekai-shop-microservice/moduels/playerModule/playerUsecase"
	"go.mongodb.org/mongo-driver/mongo"
)

// Injectors from wire.go:

func InitPlayer(cfg *config.Config, db *mongo.Client) playerHandler.Handler {
	iPlayerRepository := playerRepository.NewPlayer(db)
	iPlayerUsecase := playerUsecase.NewPlayer(iPlayerRepository)
	playerHttp := playerHandler.NewPlayerHttp(iPlayerUsecase)
	iPlayerTransactionRepository := playerRepository.NewPlayerTransaction(db)
	iPlayerTransactionUsecase := playerUsecase.NewPlayerTransaction(iPlayerTransactionRepository)
	playerTransactionHttp := playerHandler.NewPlayerTransactionHttp(iPlayerTransactionUsecase)
	playerGrpc := playerHandler.NewPlayerGrpc(iPlayerUsecase)
	playerQueue := playerHandler.NewPlayerQueue(iPlayerUsecase)
	handler := playerHandler.NewHandler(playerHttp, playerTransactionHttp, playerGrpc, playerQueue)
	return handler
}

// wire.go:

var RepoSet = wire.NewSet(playerRepository.NewPlayer, playerRepository.NewPlayerTransaction)

var UsecaseSet = wire.NewSet(playerUsecase.NewPlayer, playerUsecase.NewPlayerTransaction)

var HandlerSet = wire.NewSet(playerHandler.NewHandler, playerHandler.NewPlayerHttp, playerHandler.NewPlayerTransactionHttp, playerHandler.NewPlayerGrpc, playerHandler.NewPlayerQueue)
